apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: data  
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cassandra
data:
  ready-probe.sh: |
    #!/bin/bash

    if [[ $(nodetool status | grep $POD_IP) == *"UN"* ]]; then
      if [[ $DEBUG ]]; then
        echo "UN";
      fi
      exit 0;
    else
      if [[ $DEBUG ]]; then
        echo "Not Up";
      fi
      exit 1;
    fi  
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: ringtail-pv
spec:
  storageClassName: data    
  persistentVolumeReclaimPolicy: Retain
  capacity:
    storage: 5Gi
  accessModes:
  - ReadWriteOnce
  volumeMode: Filesystem  
  local:
    path: "/mnt/data/cassandra"
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - ringtail
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: wombat-pv
spec:
  storageClassName: data    
  persistentVolumeReclaimPolicy: Retain
  capacity:
    storage: 5Gi
  accessModes:
  - ReadWriteOnce
  volumeMode: Filesystem  
  local:
    path: "/mnt/data/cassandra"
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - wombat               
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: wallaby-pv
spec:
  storageClassName: data    
  persistentVolumeReclaimPolicy: Retain
  capacity:
    storage: 5Gi
  accessModes:
  - ReadWriteOnce
  volumeMode: Filesystem  
  local:
    path: "/mnt/data/cassandra"
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - wallaby
---  
apiVersion: v1
kind: Service
metadata:
  labels:
    app: cassandra
  name: cassandra
spec:
  clusterIP: None
  ports:
    - port: 9042
  selector:
    app: cassandra
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: cassandra
  labels:
    app: cassandra
spec:  
  serviceName: cassandra
  replicas: 1
  selector:
    matchLabels:
      app: cassandra
  template:
    metadata:
      labels:
        app: cassandra
    spec:
      terminationGracePeriodSeconds: 1800
      containers:        
      - name: cassandra
        image: arm64v8/cassandra
        imagePullPolicy: Always     
        ports:
        - containerPort: 7000
          name: intra-node
        - containerPort: 7001
          name: tls-intra-node
        - containerPort: 7199
          name: jmx
        - containerPort: 9042
          name: cql
        resources:
          limits:
            cpu: 2
            memory: 3Gi
          requests:
            cpu: "0.5"
            memory: 1Gi
        securityContext:
          capabilities:
            add:
              - IPC_LOCK
        lifecycle:
          preStop:
            exec:
              command: 
              - /bin/sh
              - -c
              - nodetool drain
        env:
          - name: MAX_HEAP_SIZE
            value: 512M
          - name: HEAP_NEWSIZE
            value: 100M
          - name: CASSANDRA_SEEDS
            value: "cassandra-0.cassandra.cass.svc.cluster.local"
          - name: CASSANDRA_CLUSTER_NAME
            value: "K8Demo"
          - name: CASSANDRA_DC
            value: "DC1-K8Demo"
          - name: CASSANDRA_RACK
            value: "Rack1-K8Demo"
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
        readinessProbe:
          exec:
            command:
              - /bin/bash
              - -c
              - exec
              - /opt/ready-probe.sh
          initialDelaySeconds: 15
          timeoutSeconds: 5            
        # These volume mounts are persistent. They are like inline claims,
        # but not exactly because the names need to match exactly one of
        # the stateful pod volumes.
        volumeMounts:
        - name: cassandra-data
          mountPath: /var/lib/cassandra
        - name: cassandra-ready-probe
          mountPath: /opt/ready-probe.sh
          subPath: ready-probe.sh 
      volumes:
        - name: cassandra-ready-probe
          configMap:
            name: cassandra   
        # - name: cassandra-data
        #   hostPath:
        #     # directory location on host
        #     path: /tmp
        #     # this field is optional
        #     type: Directory                                  
  # These are converted to volume claims by the controller
  # and mounted at the paths mentioned above.
  # do not use these in production until ssd GCEPersistentDisk or other ssd pd
  volumeClaimTemplates:
  - metadata:
      name: cassandra-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: data
      #volumeName: ringtail-pv
      resources:
        requests:
          storage: 5Gi     



# apiVersion: storage.k8s.io/v1
# kind: StorageClass
# metadata:
#   name: data
#   annotations:
#     storageclass.kubernetes.io/is-default-class: "true"                   
# provisioner: kubernetes.io/no-provisioner
# volumeBindingMode: WaitForFirstConsumer

# apiVersion: storage.k8s.io/v1
# kind: StorageClass
# metadata:
#   name: data                 
# provisioner: microk8s.io/hostpath
# volumeBindingMode: Immediate


# kind: StorageClass
# apiVersion: storage.k8s.io/v1
# metadata:
#   name: data
# provisioner: kubernetes.io/no-provisioner
# parameters:
#   type: pd-ssd
#   priority_io:  "high"  
# volumeBindingMode: WaitForFirstConsumer
#   #io_profile: "db_remote"
#   #priority_io: "high"
#   #fg: "true"
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: cass-pvc
#   namespace: rustdemo
# spec:
#   storageClassName: "" # Empty string must be explicitly set otherwise default StorageClass will be set
#   volumeName: cass-pv
#   accessModes:
#     - ReadWriteOnce  
#   resources:
#     requests:
#       storage: 5Gi  
# ---
# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: cass-pv
# spec:
#   storageClassName: ""
#   claimRef:
#     name: cass-pvc
#     namespace: rustdemo
    
#   persistentVolumeReclaimPolicy: Retain
#   capacity:
#     storage: 5Gi
#   accessModes:
#   - ReadWriteOnce
#   volumeMode: Filesystem  
#   local:
#     path: "/mnt/data"
#   nodeAffinity:
#     required:
#       nodeSelectorTerms:
#         - matchExpressions:
#             - key: kubernetes.io/hostname
#               operator: In
#               values:
#                 - ringtail